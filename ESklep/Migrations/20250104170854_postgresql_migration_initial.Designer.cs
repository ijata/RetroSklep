// <auto-generated />
using System;
using ESklep.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace ESklep.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250104170854_postgresql_migration_initial")]
    partial class postgresql_migration_initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ESklep.Models.Author", b =>
                {
                    b.Property<int>("author_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("author_id"));

                    b.Property<string>("last_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("author_id");

                    b.ToTable("Author");
                });

            modelBuilder.Entity("ESklep.Models.Category", b =>
                {
                    b.Property<int>("category_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("category_id"));

                    b.Property<bool>("is_root")
                        .HasColumnType("boolean");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("root_lvl")
                        .HasColumnType("integer");

                    b.HasKey("category_id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("ESklep.Models.DeliveryHeader", b =>
                {
                    b.Property<int>("delivery_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("delivery_id"));

                    b.Property<DateOnly>("delivery_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("delivery_time")
                        .HasColumnType("time without time zone");

                    b.Property<int>("number")
                        .HasColumnType("integer");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<int>("storehouse_id")
                        .HasColumnType("integer");

                    b.Property<float>("value_brutto")
                        .HasColumnType("real");

                    b.Property<float>("value_netto")
                        .HasColumnType("real");

                    b.Property<int>("year")
                        .HasColumnType("integer");

                    b.HasKey("delivery_id");

                    b.ToTable("DeliveryHeader");
                });

            modelBuilder.Entity("ESklep.Models.DeliveryPostion", b =>
                {
                    b.Property<int>("deliveryposition_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("deliveryposition_id"));

                    b.Property<int>("delivery_id")
                        .HasColumnType("integer");

                    b.Property<char>("meansure_unit")
                        .HasColumnType("character(1)");

                    b.Property<float>("price_brutto")
                        .HasColumnType("real");

                    b.Property<float>("price_netto")
                        .HasColumnType("real");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<float>("quantity")
                        .HasColumnType("real");

                    b.Property<int>("tax_id")
                        .HasColumnType("integer");

                    b.Property<float>("value_brutto")
                        .HasColumnType("real");

                    b.Property<float>("value_netto")
                        .HasColumnType("real");

                    b.HasKey("deliveryposition_id");

                    b.ToTable("DeliveryPostion");
                });

            modelBuilder.Entity("ESklep.Models.OrderHeader", b =>
                {
                    b.Property<int>("order_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("order_id"));

                    b.Property<int>("client_id")
                        .HasColumnType("integer");

                    b.Property<int>("number")
                        .HasColumnType("integer");

                    b.Property<DateOnly>("order_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("order_time")
                        .HasColumnType("time without time zone");

                    b.Property<DateOnly>("realization_date")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("realization_time")
                        .HasColumnType("time without time zone");

                    b.Property<int>("realization_user_id")
                        .HasColumnType("integer");

                    b.Property<int>("status")
                        .HasColumnType("integer");

                    b.Property<float>("value_brutto")
                        .HasColumnType("real");

                    b.Property<float>("value_netto")
                        .HasColumnType("real");

                    b.Property<int>("year")
                        .HasColumnType("integer");

                    b.HasKey("order_id");

                    b.ToTable("OrderHeader");
                });

            modelBuilder.Entity("ESklep.Models.OrderPosition", b =>
                {
                    b.Property<int>("orderposition_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("orderposition_id"));

                    b.Property<char>("meansure_unit")
                        .HasColumnType("character(1)");

                    b.Property<int>("order_id")
                        .HasColumnType("integer");

                    b.Property<float>("price_brutto")
                        .HasColumnType("real");

                    b.Property<float>("price_netto")
                        .HasColumnType("real");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<string>("product_name")
                        .HasColumnType("text");

                    b.Property<float>("quantity")
                        .HasColumnType("real");

                    b.Property<int>("storehouse_id")
                        .HasColumnType("integer");

                    b.Property<int>("tax_id")
                        .HasColumnType("integer");

                    b.Property<float>("value_brutto")
                        .HasColumnType("real");

                    b.Property<float>("value_netto")
                        .HasColumnType("real");

                    b.HasKey("orderposition_id");

                    b.ToTable("OrderPosition");
                });

            modelBuilder.Entity("ESklep.Models.Product", b =>
                {
                    b.Property<int>("product_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("product_id"));

                    b.Property<int?>("author_id")
                        .HasColumnType("integer");

                    b.Property<int>("category_id")
                        .HasColumnType("integer");

                    b.Property<char>("meansure_unit")
                        .HasColumnType("character(1)");

                    b.Property<string>("product_description")
                        .HasColumnType("text");

                    b.Property<string>("product_name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("year")
                        .HasColumnType("integer");

                    b.HasKey("product_id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("ESklep.Models.Storehouse", b =>
                {
                    b.Property<int>("storehouse_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("storehouse_id"));

                    b.Property<int>("delivery_id")
                        .HasColumnType("integer");

                    b.Property<char>("meansure_unit")
                        .HasColumnType("character(1)");

                    b.Property<float>("price")
                        .HasColumnType("real");

                    b.Property<int>("product_id")
                        .HasColumnType("integer");

                    b.Property<float>("quantity")
                        .HasColumnType("real");

                    b.HasKey("storehouse_id");

                    b.ToTable("Storehouse");
                });

            modelBuilder.Entity("ESklep.Models.StorehouseName", b =>
                {
                    b.Property<int>("storehouse_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("storehouse_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("storehouse_id");

                    b.ToTable("StorehouseName");
                });

            modelBuilder.Entity("ESklep.Models.Tax", b =>
                {
                    b.Property<int>("tax_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("tax_id"));

                    b.Property<char>("tax_name")
                        .HasColumnType("character(1)");

                    b.Property<int>("tax_value")
                        .HasColumnType("integer");

                    b.HasKey("tax_id");

                    b.ToTable("Tax");
                });

            modelBuilder.Entity("ESklep.Models.User", b =>
                {
                    b.Property<int>("user_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("user_id"));

                    b.Property<string>("city")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("country")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("home_number")
                        .HasColumnType("integer");

                    b.Property<bool>("is_active")
                        .HasColumnType("boolean");

                    b.Property<bool>("is_deleted")
                        .HasColumnType("boolean");

                    b.Property<string>("lastname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("nick")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("state")
                        .HasColumnType("text");

                    b.Property<string>("street")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("zipcode")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("user_id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("ESklep.Models.UserTypes", b =>
                {
                    b.Property<int>("type_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("type_id"));

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("type_id");

                    b.ToTable("UserTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
